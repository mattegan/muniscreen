#ifndef FUTURABOLD037PT7B
#define FUTURABOLD037PT7B

#include <Adafruit_GFX.h>
#include <stdint.h>

const uint8_t Futura_Bold_037pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xC7, 0xFC, 0xDE, 0xF7, 0xA0, 0x12, 0x1B, 0x1F, 0xEF,
  0xF3, 0x67, 0xFB, 0xFC, 0x6C, 0x24, 0x12, 0x00, 0x08, 0x1C, 0x3E, 0x72,
  0x78, 0x7E, 0x3F, 0x07, 0x47, 0x7F, 0x3C, 0x08, 0x08, 0x78, 0x46, 0x44,
  0x33, 0x61, 0xF2, 0x07, 0xA0, 0x01, 0x78, 0x17, 0xE1, 0xB3, 0x09, 0xF8,
  0xC7, 0x80, 0x3E, 0x0F, 0xE1, 0xCC, 0x39, 0x83, 0xE0, 0xFD, 0x3B, 0xF7,
  0x3C, 0xFF, 0xCF, 0xBC, 0xFF, 0x76, 0x6C, 0xCC, 0xCC, 0xCC, 0x66, 0x60,
  0xC6, 0x63, 0x33, 0x33, 0x33, 0x66, 0x60, 0x27, 0x4C, 0xA0, 0x18, 0x33,
  0xFF, 0xF1, 0x83, 0x06, 0x00, 0x36, 0x6C, 0xC0, 0xFF, 0xFF, 0x80, 0x06,
  0x06, 0x06, 0x0C, 0x0C, 0x18, 0x18, 0x30, 0x30, 0x60, 0x60, 0x60, 0xC0,
  0x3E, 0x3F, 0xBD, 0xDC, 0x7E, 0x3F, 0x1F, 0x8F, 0xEE, 0x7F, 0x1F, 0x00,
  0xFF, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xC0, 0x3C, 0x7E, 0xE7, 0xE7, 0x07,
  0x0E, 0x1C, 0x38, 0x7F, 0xFF, 0x3E, 0x7F, 0xE7, 0x1E, 0x1E, 0x07, 0xC7,
  0xE7, 0xFE, 0x3C, 0x0F, 0x0F, 0x8F, 0xC6, 0xE7, 0x73, 0x3B, 0xFF, 0xFF,
  0x07, 0x03, 0x80, 0x3E, 0x7E, 0x60, 0x7C, 0x7E, 0x07, 0x07, 0x87, 0xFE,
  0x7C, 0x0E, 0x0E, 0x0E, 0x0F, 0xCF, 0xF7, 0x1F, 0x8F, 0xC7, 0x7F, 0x1F,
  0x00, 0xFF, 0xFF, 0x0E, 0x1C, 0x1C, 0x38, 0x38, 0x70, 0xE0, 0xE0, 0x3E,
  0xFF, 0xE7, 0xFE, 0x7E, 0x67, 0xE7, 0xE7, 0xFE, 0x3C, 0x3E, 0x3F, 0xB8,
  0xFC, 0x7E, 0x3B, 0xFC, 0xFC, 0x1C, 0x1C, 0x1C, 0x00, 0xFF, 0x8F, 0xF8,
  0x77, 0x70, 0x06, 0x6C, 0xC0, 0x02, 0x1C, 0xFB, 0xEF, 0x1E, 0x1F, 0x1F,
  0x0E, 0x04, 0xFF, 0xFF, 0xFF, 0xF0, 0x01, 0x83, 0xC3, 0xE1, 0xE3, 0xDF,
  0x78, 0xC0, 0x00, 0x7D, 0xFF, 0x38, 0x73, 0xC7, 0x00, 0x1C, 0x38, 0x70,
  0x1F, 0x07, 0xF9, 0x83, 0x6F, 0xFB, 0xFB, 0x66, 0x6C, 0x4D, 0x9A, 0xDF,
  0xCC, 0x00, 0xFF, 0x0F, 0x80, 0x0E, 0x03, 0xE0, 0x7C, 0x0D, 0x83, 0xB8,
  0x73, 0x1F, 0xF3, 0xFE, 0x60, 0xDC, 0x1C, 0xFC, 0xFE, 0xEE, 0xEE, 0xFC,
  0xFE, 0xE7, 0xE7, 0xFF, 0xFE, 0x1F, 0x3F, 0x71, 0xE0, 0xE0, 0xE0, 0xE0,
  0x71, 0x3F, 0x1F, 0xFC, 0x7F, 0xB9, 0xDC, 0x7E, 0x3F, 0x1F, 0x8F, 0xCE,
  0xFF, 0x7E, 0x00, 0xFF, 0xFE, 0x38, 0xFF, 0xFE, 0x38, 0xFF, 0xF0, 0xFF,
  0xFE, 0x38, 0xFF, 0xFE, 0x38, 0xE3, 0x80, 0x1F, 0x0F, 0xF9, 0xC7, 0x70,
  0x0E, 0x3F, 0xC7, 0xF8, 0x3B, 0x8E, 0x7F, 0xC3, 0xE0, 0xE3, 0xF1, 0xF8,
  0xFC, 0x7F, 0xFF, 0xFF, 0x8F, 0xC7, 0xE3, 0xF1, 0xC0, 0xFF, 0xFF, 0xFF,
  0xFC, 0x1C, 0x71, 0xC7, 0x1C, 0x71, 0xD7, 0xFD, 0xC0, 0xE3, 0xB9, 0xCE,
  0xE3, 0xF8, 0xFC, 0x3F, 0x0E, 0xE3, 0xBC, 0xE7, 0xB8, 0xF0, 0xE3, 0x8E,
  0x38, 0xE3, 0x8E, 0x38, 0xFF, 0xF0, 0x70, 0xE3, 0xC7, 0x1E, 0x78, 0xF3,
  0xC7, 0xFF, 0x77, 0xBB, 0xBD, 0xDD, 0xE6, 0xE6, 0x36, 0x31, 0x80, 0xE1,
  0xFC, 0x7F, 0x9F, 0xE7, 0xFD, 0xFB, 0xFE, 0x7F, 0x9F, 0xE3, 0xF8, 0x70,
  0x1F, 0x83, 0xFC, 0x70, 0xEE, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x77, 0x0E,
  0x3F, 0xC1, 0xF8, 0xFE, 0xFE, 0xE7, 0xE7, 0xE7, 0xFF, 0xFE, 0xE0, 0xE0,
  0xE0, 0x1F, 0x83, 0xFC, 0x70, 0xEE, 0x07, 0xE0, 0x7E, 0x07, 0xE7, 0x77,
  0x3E, 0x3F, 0xE1, 0xFF, 0xFE, 0x7F, 0xB9, 0xDC, 0xEF, 0xF7, 0xF3, 0xF1,
  0xDC, 0xEF, 0x73, 0xC0, 0x7D, 0xFB, 0x97, 0x8F, 0xCF, 0xC3, 0xC7, 0xFE,
  0xF0, 0xFF, 0xFC, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE3, 0xF1,
  0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x8F, 0xC7, 0x7F, 0x1F, 0x00, 0xE0, 0xEE,
  0x39, 0xC7, 0x19, 0xC3, 0xB8, 0x76, 0x07, 0xC0, 0xF8, 0x0E, 0x01, 0xC0,
  0xE1, 0x87, 0xE3, 0x8E, 0x73, 0xCE, 0x73, 0xCE, 0x77, 0xCC, 0x36, 0xFC,
  0x3E, 0x7C, 0x3E, 0x78, 0x1C, 0x78, 0x1C, 0x38, 0x71, 0xC7, 0x78, 0x6E,
  0x0F, 0x80, 0xE0, 0x3E, 0x07, 0xE1, 0xDC, 0x71, 0xDE, 0x3C, 0x71, 0xCF,
  0x78, 0xEE, 0x0F, 0x81, 0xF0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0,
  0x7F, 0x9F, 0xE0, 0x70, 0x38, 0x0E, 0x07, 0x03, 0xC0, 0xE0, 0x7F, 0xBF,
  0xE0, 0xFF, 0x6D, 0xB6, 0xDB, 0x6F, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30,
  0x30, 0x18, 0x18, 0x0C, 0x0C, 0x06, 0x06, 0x02, 0xFD, 0xB6, 0xDB, 0x6D,
  0xBF, 0xC0, 0x3C, 0x3C, 0x7E, 0x6E, 0xE6, 0xFF, 0xFF, 0x06, 0x30, 0x3B,
  0x7F, 0xE3, 0xE3, 0xE3, 0x7F, 0x3B, 0xE0, 0xE0, 0xE0, 0xE0, 0xFE, 0xFE,
  0xC7, 0xC7, 0xC7, 0xFE, 0xFE, 0x3D, 0xFE, 0x38, 0xE1, 0xF3, 0xC0, 0x07,
  0x07, 0x07, 0x07, 0x7F, 0xFF, 0xE3, 0xE3, 0xE3, 0x7F, 0x7F, 0x3C, 0x7E,
  0xFE, 0xFE, 0xE6, 0x7E, 0x3C, 0x3B, 0xDC, 0xEF, 0xFD, 0xCE, 0x73, 0x9C,
  0x3F, 0x7F, 0xE3, 0xE3, 0xE3, 0xFF, 0x7F, 0xE7, 0x7E, 0x3C, 0xE0, 0xE0,
  0xE0, 0xE0, 0xEE, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFC, 0x0F, 0xFF,
  0xFF, 0x80, 0xFC, 0x0F, 0xFF, 0xFF, 0xFF, 0xC0, 0xE0, 0x70, 0x38, 0x1C,
  0x0E, 0x77, 0x73, 0xF1, 0xF8, 0xFE, 0x77, 0xB9, 0xE0, 0xFF, 0xFF, 0xFF,
  0xFF, 0x80, 0xFC, 0xDF, 0xFF, 0xBB, 0xF7, 0x7E, 0xEF, 0xDD, 0xFB, 0xB8,
  0xFE, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0x3E, 0x3F, 0xB8, 0xFC, 0x7E,
  0x3B, 0xF8, 0xF8, 0xFC, 0xFE, 0xC7, 0xC7, 0xC7, 0xFE, 0xFE, 0xE0, 0xE0,
  0xE0, 0x7F, 0x7F, 0xE3, 0xE3, 0xE3, 0x7F, 0x7F, 0x07, 0x07, 0x07, 0xEF,
  0xFE, 0x38, 0xE3, 0x8E, 0x00, 0x3C, 0xF9, 0x81, 0xE0, 0xCF, 0x9E, 0x00,
  0x73, 0xBF, 0xF7, 0x39, 0xCE, 0x70, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xFF,
  0x7E, 0xE3, 0xB3, 0x9D, 0xC6, 0xC3, 0xE0, 0xE0, 0x70, 0xE3, 0x1D, 0x9C,
  0x67, 0x7B, 0x8D, 0xEC, 0x3C, 0xF0, 0x73, 0x81, 0xCE, 0x00, 0x73, 0x8F,
  0xC1, 0xE0, 0x78, 0x3F, 0x1E, 0xEF, 0x3C, 0xE3, 0xB9, 0xDD, 0xC7, 0xC1,
  0xE0, 0xE0, 0x70, 0x70, 0x38, 0x38, 0x00, 0xFF, 0xF8, 0xE1, 0xC7, 0x0F,
  0xFF, 0x80, 0x37, 0x66, 0x66, 0xEE, 0x66, 0x66, 0x77, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF0, 0xCE, 0x66, 0x66, 0x77, 0x66, 0x66, 0xEE, 0x71, 0x7F, 0x4E };

const GFXglyph Futura_Bold_037pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   5,    0,    0 },   // 0x20 ' '
  {     1,   3,  10,   5,    1,   -9 },   // 0x21 '!'
  {     5,   5,   4,   6,    1,   -9 },   // 0x22 '"'
  {     8,   9,  10,  11,    1,   -9 },   // 0x23 '#'
  {    20,   8,  13,   9,    0,  -10 },   // 0x24 '$'
  {    33,  13,  10,  15,    1,   -9 },   // 0x25 '%'
  {    50,  11,  10,  12,    1,   -9 },   // 0x26 '&'
  {    64,   2,   4,   3,    1,   -9 },   // 0x27 '''
  {    65,   4,  14,   5,    1,  -10 },   // 0x28 '('
  {    72,   4,  14,   5,    0,  -10 },   // 0x29 ')'
  {    79,   5,   4,   9,    2,  -10 },   // 0x2A '*'
  {    82,   7,   7,   9,    1,   -7 },   // 0x2B '+'
  {    89,   4,   5,   5,    0,   -2 },   // 0x2C ','
  {    92,   4,   2,   4,    0,   -4 },   // 0x2D '-'
  {    93,   3,   3,   5,    1,   -2 },   // 0x2E '.'
  {    95,   8,  13,   8,    0,  -10 },   // 0x2F '/'
  {   108,   9,  10,   9,    1,   -9 },   // 0x30 '0'
  {   120,   5,  10,   9,    2,   -9 },   // 0x31 '1'
  {   127,   8,  10,   9,    1,   -9 },   // 0x32 '2'
  {   137,   8,  10,   9,    1,   -9 },   // 0x33 '3'
  {   147,   9,  10,   9,    1,   -9 },   // 0x34 '4'
  {   159,   8,  10,   9,    1,   -9 },   // 0x35 '5'
  {   169,   9,  10,   9,    1,   -9 },   // 0x36 '6'
  {   181,   8,  10,   9,    1,   -9 },   // 0x37 '7'
  {   191,   8,  10,   9,    1,   -9 },   // 0x38 '8'
  {   201,   9,  10,   9,    1,   -9 },   // 0x39 '9'
  {   213,   3,   7,   5,    1,   -6 },   // 0x3A ':'
  {   216,   4,   9,   5,    0,   -6 },   // 0x3B ';'
  {   221,   7,  10,   9,    1,   -9 },   // 0x3C '<'
  {   230,   7,   4,   9,    1,   -6 },   // 0x3D '='
  {   234,   7,  10,   9,    1,   -9 },   // 0x3E '>'
  {   243,   7,  10,   9,    1,   -9 },   // 0x3F '?'
  {   252,  11,  12,  13,    1,   -8 },   // 0x40 '@'
  {   269,  11,  10,  11,    0,   -9 },   // 0x41 'A'
  {   283,   8,  10,  10,    1,   -9 },   // 0x42 'B'
  {   293,   8,  10,  10,    1,   -9 },   // 0x43 'C'
  {   303,   9,  10,  11,    1,   -9 },   // 0x44 'D'
  {   315,   6,  10,   8,    1,   -9 },   // 0x45 'E'
  {   323,   6,  10,   8,    1,   -9 },   // 0x46 'F'
  {   331,  11,  10,  13,    1,   -9 },   // 0x47 'G'
  {   345,   9,  10,  11,    1,   -9 },   // 0x48 'H'
  {   357,   3,  10,   5,    1,   -9 },   // 0x49 'I'
  {   361,   6,  10,   7,    0,   -9 },   // 0x4A 'J'
  {   369,  10,  10,  11,    1,   -9 },   // 0x4B 'K'
  {   382,   6,  10,   8,    1,   -9 },   // 0x4C 'L'
  {   390,  13,  10,  14,    1,   -9 },   // 0x4D 'M'
  {   407,  10,  10,  12,    1,   -9 },   // 0x4E 'N'
  {   420,  12,  10,  14,    1,   -9 },   // 0x4F 'O'
  {   435,   8,  10,  10,    1,   -9 },   // 0x50 'P'
  {   445,  12,  10,  14,    1,   -9 },   // 0x51 'Q'
  {   460,   9,  10,  10,    1,   -9 },   // 0x52 'R'
  {   472,   7,  10,   9,    1,   -9 },   // 0x53 'S'
  {   481,   7,  10,   9,    1,   -9 },   // 0x54 'T'
  {   490,   9,  10,  11,    1,   -9 },   // 0x55 'U'
  {   502,  11,  10,  11,    0,   -9 },   // 0x56 'V'
  {   516,  16,  10,  16,    0,   -9 },   // 0x57 'W'
  {   536,  11,  10,  11,    0,   -9 },   // 0x58 'X'
  {   550,  11,  10,  11,    0,   -9 },   // 0x59 'Y'
  {   564,  10,  10,  10,    0,   -9 },   // 0x5A 'Z'
  {   577,   3,  14,   5,    1,  -10 },   // 0x5B '['
  {   583,   8,  13,   8,    0,  -10 },   // 0x5C '\'
  {   596,   3,  14,   5,    1,  -10 },   // 0x5D ']'
  {   602,   8,   5,   8,    0,   -9 },   // 0x5E '^'
  {   607,   8,   2,   8,    0,    1 },   // 0x5F '_'
  {   609,   4,   3,   8,    1,  -10 },   // 0x60 '`'
  {   611,   8,   7,  10,    1,   -6 },   // 0x61 'a'
  {   618,   8,  11,  10,    1,  -10 },   // 0x62 'b'
  {   629,   6,   7,   7,    1,   -6 },   // 0x63 'c'
  {   635,   8,  11,  10,    1,  -10 },   // 0x64 'd'
  {   646,   8,   7,   9,    1,   -6 },   // 0x65 'e'
  {   653,   5,  11,   7,    1,  -10 },   // 0x66 'f'
  {   660,   8,  10,  10,    1,   -6 },   // 0x67 'g'
  {   670,   8,  11,  10,    1,  -10 },   // 0x68 'h'
  {   681,   3,  11,   5,    1,  -10 },   // 0x69 'i'
  {   686,   3,  14,   5,    1,  -10 },   // 0x6A 'j'
  {   692,   9,  11,  10,    1,  -10 },   // 0x6B 'k'
  {   705,   3,  11,   5,    1,  -10 },   // 0x6C 'l'
  {   710,  11,   7,  13,    1,   -6 },   // 0x6D 'm'
  {   720,   8,   7,  10,    1,   -6 },   // 0x6E 'n'
  {   727,   9,   7,  11,    1,   -6 },   // 0x6F 'o'
  {   735,   8,  10,  10,    1,   -6 },   // 0x70 'p'
  {   745,   8,  10,  10,    1,   -6 },   // 0x71 'q'
  {   755,   6,   7,   7,    1,   -6 },   // 0x72 'r'
  {   761,   7,   7,   7,    0,   -6 },   // 0x73 's'
  {   768,   5,   9,   7,    1,   -8 },   // 0x74 't'
  {   774,   8,   7,  10,    1,   -6 },   // 0x75 'u'
  {   781,   9,   7,   9,    0,   -6 },   // 0x76 'v'
  {   789,  14,   7,  14,    0,   -6 },   // 0x77 'w'
  {   802,  10,   7,  10,    0,   -6 },   // 0x78 'x'
  {   811,   9,  10,   9,    0,   -6 },   // 0x79 'y'
  {   823,   7,   7,   8,    1,   -6 },   // 0x7A 'z'
  {   830,   4,  14,   6,    1,  -10 },   // 0x7B '{'
  {   837,   3,  12,   7,    2,   -9 },   // 0x7C '|'
  {   842,   4,  14,   6,    1,  -10 },   // 0x7D '}'
  {   849,   8,   3,  10,    1,  -11 } }; // 0x7E '~'

const GFXfont Futura_Bold_037pt7b PROGMEM = {
  (uint8_t  *)Futura_Bold_037pt7bBitmaps,
  (GFXglyph *)Futura_Bold_037pt7bGlyphs,
  0x20, 0x7E, 18 };

// Approx. 1524 bytes

#endif